{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LevelSelection = function (_Component) {\n  _inherits(LevelSelection, _Component);\n\n  var _super = _createSuper(LevelSelection);\n\n  function LevelSelection() {\n    _classCallCheck(this, LevelSelection);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LevelSelection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onCancel = _this$props.onCancel,\n          isVisible = _this$props.isVisible,\n          levelSelected = _this$props.levelSelected;\n      return _jsx(Modal, {\n        onRequestClose: onCancel,\n        animationType: \"slide\",\n        transparent: true,\n        visible: isVisible,\n        children: _jsx(View, {\n          style: styles.frame,\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: \"Selecione o N\\xEDvel\"\n            }), _jsx(TouchableOpacity, {\n              style: [styles.button, styles.backGroundEasy],\n              onPress: function onPress() {\n                return levelSelected(0.1);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonLabel,\n                children: \"F\\xE1cil\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.button, styles.backGroundMedium],\n              onPress: function onPress() {\n                return levelSelected(0.2);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonLabel,\n                children: \"M\\xE9dio\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.button, styles.backGroundHard],\n              onPress: function onPress() {\n                return levelSelected(0.3);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonLabel,\n                children: \"Dif\\xEDcil\"\n              })\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return LevelSelection;\n}(Component);\n\nvar styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0,0,0,0.6)'\n  },\n  container: {\n    backgroundColor: '#EEE',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: '700'\n  },\n  button: {\n    marginTop: 10,\n    padding: 5,\n    width: 85\n  },\n  backGroundEasy: {\n    backgroundColor: '#49b65d'\n  },\n  buttonLabel: {\n    fontSize: 20,\n    color: '#EEE',\n    fontWeight: '700',\n    textAlign: 'center'\n  },\n  backGroundMedium: {\n    backgroundColor: '#2765F7'\n  },\n  backGroundHard: {\n    backgroundColor: '#F26337'\n  }\n});\nexport default LevelSelection;","map":{"version":3,"sources":["/home/andre/Documentos/Udemy Course/mines/Mine/src/screens/LevelSelection.js"],"names":["React","Component","LevelSelection","props","onCancel","isVisible","levelSelected","styles","frame","container","title","button","backGroundEasy","buttonLabel","backGroundMedium","backGroundHard","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","padding","fontSize","fontWeight","marginTop","width","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nclass LevelSelection extends Component {\n  render() { \n    const { onCancel, isVisible, levelSelected } = this.props;\n    return(\n      <Modal\n        onRequestClose={ onCancel }\n        animationType='slide'\n        transparent={true}\n        visible={ isVisible }\n      >\n        <View style={ styles.frame }>\n          <View style={ styles.container }>\n            <Text style={ styles.title }>Selecione o Nível</Text>\n            <TouchableOpacity\n              style={ [styles.button, styles.backGroundEasy] }\n              onPress={ () => levelSelected(0.1) }\n            >\n              <Text style={ styles.buttonLabel }>Fácil</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={ [styles.button, styles.backGroundMedium] }\n              onPress={ () => levelSelected(0.2) }\n            >\n              <Text style={ styles.buttonLabel }>Médio</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={ [styles.button, styles.backGroundHard] }\n              onPress={ () => levelSelected(0.3) }\n            >\n              <Text style={ styles.buttonLabel }>Difícil</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0,0,0,0.6)'\n  }, \n  container: {\n    backgroundColor: '#EEE',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: '700'\n  },\n  button: {\n    marginTop: 10,\n    padding: 5,\n    width: 85\n  },\n  backGroundEasy: {\n    backgroundColor: '#49b65d'\n  }, \n  buttonLabel: {\n    fontSize: 20,\n    color: '#EEE',\n    fontWeight: '700',\n    textAlign: 'center',\n  },\n  backGroundMedium: {\n    backgroundColor: '#2765F7'\n  },\n  backGroundHard: {\n    backgroundColor: '#F26337'\n  }\n});\n\nexport default LevelSelection;\n"]},"metadata":{},"sourceType":"module"}